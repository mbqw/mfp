<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.task.dao.DynamicMsgMapper">

    <select id="getObjectById" resultMap="msg_user">
    	SELECT msg.id,SUBSTRING(msg.content,1,300)content,msg.img,msg.ylike,msg.unlike,msg.u_id,u.username,u.avatar
        FROM `u_dyn_msg` msg
        INNER JOIN USER u
        ON msg.`u_id` = u.`id`
        WHERE msg.id = ${id}
	</select>

    <insert id="addObject" parameterType="com.task.dao.DynamicMsgMapper" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO u_dyn_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="content != null and content != ''">content,</if>
        <if test="img != null and img != ''">img,</if>
        <if test="ylike != null and ylike != ''">ylike,</if>
        <if test="unlike != null and unlike != ''">unlike,</if>
        <if test="u_id != null and u_id != ''">u_id,</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="content != null and content != ''">#{content,jdbcType=VARCHAR},</if>
        <if test="img != null and img != ''">#{img,jdbcType=VARCHAR},</if>
        <if test="ylike != null and ylike != ''">#{ylike,jdbcType=INTEGER},</if>
        <if test="unlike != null and unlike != ''">#{unlike,jdbcType=INTEGER},</if>
        <if test="u_id != null and u_id != ''">#{u_id,jdbcType=INTEGER},</if>
    </trim>
</insert>

    <insert id="batchAddObject" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO Sample(name,age,sex) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (#{item.name},#{item.age},#{item.sex})
        </foreach>
    </insert>

    <select id="getObjectList" resultType="com.task.pojo.DynamicMsg">
        SELECT * FROM u_dyn_msg
        <where>
            <if test="username != null and username != ''">AND username=#{username,jdbcType=VARCHAR}</if>
            <if test="account != null and account != ''">AND account=#{account,jdbcType=VARCHAR}</if>
            <if test="password != null and password != ''">AND password=#{password,jdbcType=VARCHAR}</if>
            <if test="email != null and email != ''">AND email=#{email,jdbcType=VARCHAR}</if>
        </where>
    </select>
    <resultMap id="msg_user" type="com.task.pojo.DynamicMsg">
        <result column="username" property="user.username"/>
        <result column="avatar" property="user.avatar"/>
    </resultMap>
    <select id="findByObjectPageList" resultMap="msg_user">
        SELECT msg.id,SUBSTRING(msg.content,1,300)content,msg.img,msg.ylike,msg.unlike,msg.star,msg.u_id,u.username,u.avatar,s.id starId
        FROM u_dyn_msg msg
        INNER JOIN USER u
        ON u.id=msg.u_id
        LEFT JOIN (SELECT * FROM u_m_star WHERE u_id = #{user_id,jdbcType=INTEGER}) s
        ON msg.id = s.m_id
        <where>
            <if test="u_id != null and u_id != ''">AND msg.u_id=#{u_id,jdbcType=INTEGER}</if>
        </where>
        ORDER BY msg.createTime DESC
    </select>

    <select id="findStarMsgPageList" resultMap="msg_user">
        SELECT m.*,u.`username`,u.`avatar` FROM `u_m_star` s
        INNER JOIN u_dyn_msg m
        ON m.`id` = s.`m_id`
        INNER JOIN USER u
        ON u.`id` = m.`u_id`
        WHERE s.`u_id` = #{id,jdbcType=INTEGER}
        ORDER BY m.createTime DESC
    </select>
    <resultMap id="date_string" type="map">
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" javaType="string"></result>
    </resultMap>
    <select id="findCommentsPageList" resultMap="date_string">
        SELECT c.*,c2.hasComment,s.username srcUsername,s.avatar srcAvatar
         FROM `dyn_msg_comment` c
         LEFT JOIN (SELECT pid,COUNT(*) hasComment FROM dyn_msg_comment WHERE descUid IS NOT NULL GROUP BY pid) c2
         ON c.id = c2.pid
         INNER JOIN USER s
         ON c.srcUid = s.id
        WHERE c.m_id = #{id} AND c.descUid IS NULL
        ORDER BY c.createTime ${sort}
    </select>
    <select id="findCommentsFloorPageList" resultMap="date_string">
         SELECT c.*,s.username srcUsername,s.avatar srcAvatar,d.username descUsername,d.avatar descAvatar
         FROM `dyn_msg_comment` c
         INNER JOIN USER s
         ON c.srcUid = s.id
         LEFT JOIN USER d
         ON c.descUid = d.id
        WHERE c.pid = #{pid} AND c.descUid IS NOT NULL
    </select>
    <insert id="addComment" parameterType="map" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO dyn_msg_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pid != null and pid != ''">pid,</if>
            <if test="m_id != null and m_id != ''">m_id,</if>
            <if test="srcUid != null and srcUid != ''">srcUid,</if>
            <if test="descUid != null and descUid != ''">descUid,</if>
            <if test="content != null and content != ''">content,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pid != null and pid != ''">#{pid,jdbcType=INTEGER},</if>
            <if test="m_id != null and m_id != ''">#{m_id,jdbcType=INTEGER},</if>
            <if test="srcUid != null and srcUid != ''">#{srcUid,jdbcType=INTEGER},</if>
            <if test="descUid != null and descUid != ''">#{descUid,jdbcType=INTEGER},</if>
            <if test="content != null and content != ''">#{content,jdbcType=VARCHAR},</if>
        </trim>
    </insert>


    <delete id="deleteObjectById" parameterType="com.task.dao.DynamicMsgMapper">
      DELETE FROM sample where id=#{id}
    </delete>

    <update id="updateObject" parameterType="com.task.dao.DynamicMsgMapper">
        UPDATE u_dyn_msg
        <set>
            <if test="ylike != null and ylike != ''">ylike=ylike+ #{ylike,jdbcType=INTEGER},</if>
            <if test="unlike != null and unlike != ''">unlike=unlike+ #{unlike,jdbcType=INTEGER},</if>
            <if test="star != null and star != ''">star=star+ #{star,jdbcType=INTEGER},</if>
        </set>
        WHERE ID = #{id,jdbcType=INTEGER}
    </update>

    <delete id="batchDeleteObject">
        DELETE FROM sample where id in(
        <foreach collection="list" index="index" item="item" separator=",">
            #{item}
        </foreach>
        )
    </delete>

</mapper>